# Prefix key
unbind C-b
set -g prefix C-s
bind-key -r C-s send-prefix

# Reload conf
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Pane navigation (vim/tmux)
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Restore clear screen keybind mapped over by tmux-navigator
bind C-l send-keys C-l

# Pane size
# http://superuser.com/questions/660013/resizing-pane-is-not-working-for-tmux-on-mac
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
bind -n C-Left resize-pane -L 5
bind -n C-Right resize-pane -R 5
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# Keys
bind k confirm kill-window
bind K confirm kill-server
bind-key b break-pane -d
bind c new-window -c "#{pane_current_path}"
bind-key _ split-window -v  -c '#{pane_current_path}'
bind-key | split-window -h  -c '#{pane_current_path}'
bind a last-window
bind space command-prompt -p index "select-window"
#bind-key -n C-o command-prompt -p "pane number: " "select-pane -t :.%%"

# Options
set -g bell-action none
set -g set-titles on
set -g set-titles-string "tmux (#I:#W)"
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on
set -g status-left ""
set -g status-left-length 50
set -g status-left-attr bold
set -g status-right " #(date '+%a, %b %d - %I:%M') "
set -g display-time 4000  # 4s
set -g display-panes-time 4000  #4s
set -g history-limit 100000
set -g default-terminal "screen-256color"
set -g status-bg '#DB7093'
set -g status-fg '#FFFFFF'
set -g message-bg '#32CD32'
set -g message-fg '#000000'

# Window options
setw -g monitor-activity off
setw -g automatic-rename off

# Copy-paste integration
set-option -g default-command "reattach-to-user-namespace -l bash"

# Vi-like bindings
setw -g mode-keys vi
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Bind ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# Switch session
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"
